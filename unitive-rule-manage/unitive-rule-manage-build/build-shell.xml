<?xml version="1.0" encoding="GBK"?>

<!-- 
====================================================================== 
     description
         App to zip
     boco                                                                
====================================================================== 
-->
<project name="App" default="dist" xmlns:artifact="urn:maven-artifact-ant">
	<description>
		打包发布脚本
    </description>
	<property environment="SystemVariable" />
	<property name="maven.home" value="${SystemVariable.M2_HOME}" />

	<property name="app.name" value="unitive-rule-manage" />
	<property name="dist.dir" value="dist" />
	<property name="bin.dir" value="bin" />
	<property name="docs.dir" value="doc" />
	
	<property name="assemble" value="unitive-rule-manage-build" />
	<property name="blocapi" value="unitive-rule-manage-blocapi" />
	<property name="service" value="unitive-rule-manage-service" />
	<property name="dao" value="unitive-rule-manage-dao" />

	<!--使用Maven2依赖管理 -->
	<path id="maven-ant-tasks.classpath" path="resources/mavenplus/maven-ant-tasks-2.1.3.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpathref="maven-ant-tasks.classpath" />
	
	<target name="init" description="initialized maven env">
		<!--定义Maven2变量-->
		<artifact:pom id="parent.pom" file="${basedir}/../pom.xml" />
		<artifact:pom id="blocapi.pom" file="${basedir}/../${blocapi}/pom.xml" />
		<artifact:pom id="service.pom" file="${basedir}/../${service}/pom.xml" />
		<artifact:pom id="dao.pom" file="${basedir}/../${dao}/pom.xml" />
		<artifact:dependencies pathId="maven.classpath" filesetid="maven.fileset" usescope="compile">
			<pom refid="blocapi.pom"/>
		</artifact:dependencies>
		
		<echo>maven env initialized:${basedir}</echo>
	</target>

	<target name="maven-init" depends="init">
		<property name="maven.home" location="${maven.home}" />
		<echo message="Maven Home set to ${maven.home}" />
	</target>

	<target name="maven-install-before" description="Run the install goal against the maven build">
		<artifact:mvn pom="${basedir}/../pom.xml" mavenhome="${maven.home}" fork="true">
			<arg value="clean" />
			<arg value="install" />
			<arg value="-Dmaven.test.skip=true" />
		</artifact:mvn>
		<echo>mvn clean install -Dmaven.test.skip=true finished</echo>
	</target>

	<target name="maven-install" depends="maven-install-before,maven-init" description="Run the install goal against the maven build">
		
	</target>
	
	<!-- ================================= 
          target: dist              
         ================================= -->
	<target name="dist" depends="maven-install,clean,copy" description="mvn install and copy file">
		<tstamp>
			<format property="DSTAMP" pattern="yyyyMMddHHmm" />
		</tstamp>
		<zip destfile="${dist.dir}/${app.name}-V${parent.pom.version}-${DSTAMP}.zip">
			<zipfileset dir="${dist.dir}">
				<include name="${parent.pom.artifactId}-${parent.pom.version}/**"/>
			</zipfileset>
		</zip>
		<echo>zip finished</echo>
	</target>
	<!--复制jar文件到dist目录下-->
	<target name="copy">
		<property name="dist.root" value="${dist.dir}/${parent.pom.artifactId}-${parent.pom.version}" />
		<property name="dist.lib" value="${dist.root}/lib" />
		<copy todir="${dist.lib}">
			<fileset refid="maven.fileset" />
			<mapper type="flatten" />
		</copy>
		<copy todir="${dist.lib}">
			<fileset file="${basedir}/../${blocapi}/target/${blocapi.pom.artifactId}-${blocapi.pom.version}.jar">
			</fileset>
			<fileset file="${basedir}/../${service}/target/${service.pom.artifactId}-${service.pom.version}.jar">
			</fileset>
			<fileset file="${basedir}/../${dao}/target/${dao.pom.artifactId}-${dao.pom.version}.jar">
			</fileset>
		</copy>
		<!-- 拷贝执行脚本 -->
		<copy todir="${dist.root}/bin">
			<fileset dir="resources/script">
				<include name="**/*" />
			</fileset>
		</copy>
		

		<!-- 开发配置 -->
		<copy todir="${dist.root}/devConf">
			<fileset file="${basedir}/../${assemble}/application.properties" />
			<fileset file="${basedir}/../${assemble}/application-dev.properties" />
		</copy>
		<!--
		<copy todir="${dist.root}/devConf">
			<fileset file="${basedir}/../${assemble}/src/main/resources/appContext-bqa-web.xml" />
			<fileset file="${basedir}/../${assemble}/src/main/resources/appContext-bqa-base.xml" />
			<fileset file="${basedir}/../${assemble}/src/main/resources/configadmin.xml" />
		</copy>
		-->

		<!-- 现场配置 -->
		<copy todir="${dist.root}/prjConf">
			<fileset file="${basedir}/../${assemble}/application.properties" />
			<fileset file="${basedir}/../${assemble}/application-dev.properties" />
		<!--
			<fileset file="${basedir}/../${assemble}/src/main/resources/configadmin.properties" />
			<fileset file="${basedir}/../${assemble}/src/main/resources/logback.xml" />
			<fileset file="${basedir}/../${assemble}/src/main/resources/datasource.properties" />
			<fileset file="${basedir}/../${assemble}/src/main/resources/ucmpconfig.yaml" />
		-->
		</copy>
		
		<!-- 集中配置 
		<copy todir="${dist.root}">
			<fileset file="${basedir}/../${assemble}/src/main/resources/config-8104c0b2-284e-4d46-81a6-ee5ea78fa3c2" />
		</copy>-->

		<!--docs-->
		<!--
		<copy todir="${dist.root}/doc">
			<fileset dir="src/main/resources/doc">
				<include name="01-安装文档-业务质量监控服务.docx" />
			</fileset>
		</copy>
		-->
		
		<echo>copy file finished</echo>
	</target>

	<target name="clean" description="clean dist dir">
		<delete dir="${dist.dir}">
		</delete>
		<echo>clean dist dir finished</echo>
	</target>
	
</project>